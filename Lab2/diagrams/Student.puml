@startuml
    Class Student_short
    {
    +id: Integer
    +surname_and_initials: String
    +git: String
    +contact: String
    --
    +{static}initialize(Integer, String)
    +{static}initialize_from_student(Student)
    +{static}get_hash(String): Hash
    +validate?(): Boolean
    +has_contact?(): Boolean
    +has_git?(): Boolean
    ..Getters..
    +surname_and_initials(): String
    +id(): Integer
    +git(): String
    +contact(): String
    }

    Class Student extends Student_short
    {
    +surname: String
    +name: String
    +lastname: String
    +phone: String
    +tg: String
    +mail: String
    --
    +{static}initialize(Hash)
    +{static}make_student_from_str(String)
    +{static}from_hash(Hash)
    +to_s()
    +get_info(): String
    +{static}valid_phone?(): Boolean
    +{static}valid_mail?(): Boolean
    +{static}valid_username?(): Boolean
    -get_contact(): String
    .. Setters ..
    +set_contacts(Hash)
    +surname=(String)
    +name=(String)
    +lastname=(String)
    +id=(Integer)
    +git=(String)
    -mail=(String)
    -tg=(String)
    -phone=(String)
    .. Getters ..
    +surname(): String
    +name(): String
    +lastname(): String
    +id(): Integer
    +phone(): String
    +mail(): String
    +tg(): String
    +git(): String
    }
    class Data_table
    {
    +table: Array
    __
    +{static}initialize(Array)
    +get_value(Integer, Integer)
    +rows_count(): Integer
    +columns_count(String): Integer
    ..Getters..
    -table()
    }
    class Data_list
    {
    +list: Array
    +selected_items: Array
    --
    +{static}initialize(Array)
    +select(Integer)

    +get_data(): Data_table
    #fill_row(Object): Array
    #get_names(): Array
    ..Setters..
    +list=(Array)
    ..Getters..
    +list(): Array
    +selected_items(): Array
     }
    class Data_list_student_short extends Data_list
    {
    +observer(Main_window)
    __
    +{static}initialize(list)
    +get_names(): Array
    +notify
    #fill_row(Student_short): Array
    }
    class Student_list
    {
    +adapter
    --
    +{static}initialize(Object)
    +get_k_n_student_short_list(Integer, Data_list): Data_list
    +get_student_by_id(Integer): Student
    +update_student_by_id(Integer)
    +add_student(Student)
    +delete_student_by_id(Integer)
    +get_student_count(): Integer
    ..Getters..
    +adapter
    }
    class Student_list_base
    {
    +list: Array
        +list: Array
        -strategy: Object
        --
        +{static}initialize(Object)
        +read_from(String)
        +write_to(String)
        +get_student_short_list(Integer, Data_list): Data_list
        +get_student_by_id(Integer): Student
        +update_student_by_id(Integer)
        +insert_student(Student)
        +delete_student_by_id(Integer)
        +sort_by()
        +get_student_count(): Integer
        +get_id(): Integer
        ..Setters..
        -strategy=()
        ..Getters..
        +list()
        -strategy()
    }
    class Student_list_file_adapter
    {
    +file_driver: Student_list_base
    +path: String
    --
    +get_k_n_student_short_list(Integer, Data_list): Data_list
    +get_student_by_id(Integer): Student
    +update_student_by_id(Integer)
    +add_student(Student)
    +delete_student_by_id(Integer)
    +get_student_count(): Integer
    }
    class Student_list_strategy
    {
    --
    +read_from(String, Student_list)
    +write_to(String, Student_list)
    #parse(String)
    #get_data(String)
    }
    class Student_list_txt extends Student_list_strategy
    {
    --
    #parse(String): Array
    #get_data(String): String
    #make_json_str(String): String
    }
    class Student_list_json extends Student_list_strategy
    {
    --
    #parse(String): Array
    #get_data(Array): Array
    }
    class Student_list_yaml extends Student_list_strategy
    {
    --
    #parse(String): Array
    #get_data(Array): Array
    }
    class Student_list_db
    {
    --
    +{static}initialize(String, Bool)
    +get_student_by_id(Integer): Student
    +delete_student_by_id(Integer)
    +insert_student(Student)
    +update_student_by_id(Integer, Student)
    +get_student_count(): Integer
    +request(String): Hash
    ..Setters..
    -db_driver=()
    ..Getters..
    +db_driver()
    }
    class Database_driver
    {
    +instance: Database_driver
    __
    -{static}initialize(String, Bool)
    +{static}get_instance(String, Bool): Database_driver
    +get_student_by_id(Integer): Hash
    +delete_student_by_id(Integer)
    +insert_student(Student)
    +update_student_by_id(Integer, Student)
    +get_student_count(): Integer
    +request(String): Hash
    -set_parameters(String, Bool)
    -new_id(): Integer
    ..Setters..
    -database=()
    ..Getters..
    -database()
    }

    class Main_window
    {
    +controller: Student_list_controller
    +filter_area: Filter_area
    +Table_area: Table_area
    --
    +initialize(FXApp, String, Array)
    +build_menu_bar()
    +create()
    ..Getters..
    +controller()
    }
    class Filter_area
    {
    +filters: Array
    +filters_frames: Array
    --
    +{static}initialize(FXParent, Hash, Block)
    +text_field_of_surname_and_init()
    +make_filter(String)
    +drop_filters_button()
    ..Getters..
    +filters()
    +filter_frames()
    }
    class Table_area
    {
    -left_frame: FXVerticalFrame
    -right_frame: FXVerticalFrame
    +table: FXTable
    +control_buttons: Hash
    +page_buttons: Hash
    --
    +{static}initialize(FXParent, Hash, Block)
    +build_table(): FXTable
    +make_page_buttons()
    +test_filling()
    +buttons_control()
    count_selected_rows(): Integer
    ..Getters..
    +table()
    +control_buttons()
    +page_buttons()
    -left_frame()
    -right_frame()
    }
    class Control_buttons
    {
    +buttons: Hash
    --
    +{static}initialize(FXParent, Hash, Block)
    +make_table_buttons()
    +buttons_control(Integer)
    }
    class Student_list_controller
    {
    +view: Main_window
    +student_list: Student_list
    --
    {static}initialize(Main_window, Object)
    }

    class Add_student_controller
    {
    +view
    +parent_controller: Student_list_controller
    --
    +add_student()
    +change_button_state()
    +check_valid(): Bool
    +get_student_hash():Hash
    ..Getters..
    parent_controller
    }


    Data_table                <-- Data_list
    Student_list_file_adapter o-- Student_list_base
    Student_list_base         *-- Student_list_strategy
    Student_list              *-- Student_list_file_adapter
    Data_list_student_short   o-- Student_short
    Data_list                 <-- Student_list_base
    Student                   <-- Student_list_db
    Student_list              *-- Student_list_db
    Student_list_db           *-- Database_driver
    Main_window               *-- Student_list_controller
    Main_window               o-- Filter_area
    Main_window               o-- Table_area
    Table_area                o-- Control_buttons
    Data_list_student_short   o-- Main_window

@enduml
